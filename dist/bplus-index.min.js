!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):"object"==typeof exports?exports.BPlusTree=n():e.BPlusTree=n()}(this,function(){return function(e){function n(r){if(t[r])return t[r].exports;var i=t[r]={exports:{},id:r,loaded:!1};return e[r].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}([function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var i=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),s=t(1),l=t(2),a=function(){function e(){var n=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];r(this,e),this.bf=n.branchingFactor||50,this.debug=n.debug||!1,this.root=new s}return i(e,[{key:"dumpTree",value:function(e){e=e||this.root;var n={id:e.id,keys:e.keys,values:e.values,prev:e.prev?e.prev.id:null,next:e.next?e.next.id:null,children:[]},t=!0,r=!1,i=void 0;try{for(var s,l=e.children[Symbol.iterator]();!(t=(s=l.next()).done);t=!0){var a=s.value;n.children.push(this.dumpTree(a))}}catch(u){r=!0,i=u}finally{try{!t&&l["return"]&&l["return"]()}finally{if(r)throw i}}return n}},{key:"get",value:function(e){return this._findLeaf(e).get(e)}},{key:"getAll",value:function(){for(var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],n=l.mergeObj({sortDescending:!1},e),t=this._findLeaf(l.detectKey(this.root)),r={index:0,leaf:t},i=[];null!==r;)i=i.concat(r.leaf.values[r.index]),r=this._stepForward(r.index,r.leaf);return n.sortDescending===!0&&i.reverse(),i}},{key:"getRange",value:function(e,n){var t=arguments.length<=2||void 0===arguments[2]?{}:arguments[2],r=l.mergeObj({lowerInclusive:!0,upperInclusive:!1,sortDescending:!1},t),i=[],s=this._findLeaf(e),a=l.binarySearch(s.keys,e),u={index:a.index,leaf:s};for(a.index>=s.keys.length&&(u=this._stepForward(u.index,u.leaf)),a.found&&r.lowerInclusive===!1&&(u=this._stepForward(u.index,u.leaf));u.leaf.keys[u.index]<n;)i=i.concat(u.leaf.values[u.index]),u=this._stepForward(u.index,u.leaf);return u.leaf.keys[u.index]<=n&&r.upperInclusive===!0&&(i=i.concat(u.leaf.values[u.index])),r.sortDescending===!0&&i.reverse(),i}},{key:"inject",value:function(e,n){this.debug&&console.log("INJECT "+e+" = "+n);var t=this._findLeaf(e);t.injectData(e,n),this._splitLeaf(t)}},{key:"eject",value:function(e,n){this.debug&&console.log("EJECT "+e+" = "+n);var t=this._findLeaf(e),r=t.ejectData(e,n);r.found&&0===r.index&&t.parent&&t.keys.length>0&&e!==t.keys[0]&&(this.debug&&console.log("REPLACE LEAF KEYS "+e+" -> "+t.keys[0]),t.parent.replaceKey(e,t.keys[0])),this._mergeLeaf(t)}},{key:"_stepForward",value:function(e,n){return e+1<n.keys.length?{index:e+1,leaf:n}:n.next?{index:0,leaf:n.next}:null}},{key:"_stepBackward",value:function(e,n){return 0>e-1?{index:e-1,leaf:n}:n.prev?{index:n.prev.keys.length-1,leaf:n.prev}:null}},{key:"_minKeys",value:function(){return Math.floor(this.bf/2)}},{key:"_maxKeys",value:function(){return this.bf-1}},{key:"_findLeaf",value:function(e,n){if(n=n||this.root,0===n.children.length)return n;var t=l.binarySearch(n.keys,e),r=t.found?t.index+1:t.index;return this._findLeaf(e,n.children[r])}},{key:"_splitLeaf",value:function(e){if(e.size()>this._maxKeys()){this.debug&&(console.log("BEFORE SPLIT LEAF "+e.id),console.log(JSON.stringify(this.dumpTree(),null,2)));var n=Math.floor(e.size()/2),t=e.parent,r=e.prev,i=e.next,a=e.children,u=e.keys,o=e.values,h=new s,c=new s;if(null!=r&&(r.next=h),null!=i&&(i.prev=c),h.parent=t,h.children=a.slice(0,n),h.keys=u.slice(0,n),h.values=o.slice(0,n),c.parent=t,c.children=a.slice(n),c.keys=u.slice(n),c.values=o.slice(n),e===this.root)e.values.length>0?(t=this.root=new s,t.children=[h,c],t.keys=[u[n]],h.parent=t,c.parent=t,h.next=c,c.prev=h,this.debug&&(console.log("SPLIT ROOT LEAF"),console.log(JSON.stringify(this.dumpTree(),null,2)))):(t=this.root=new s,t.children=[h,c],t.keys=[u[n]],h.parent=t,h.children=a.slice(0,n+1),h.setParentOnChildren(),c.parent=t,c.keys=u.slice(n+1),c.children=a.slice(n+1),c.setParentOnChildren(),this.debug&&(console.log("SPLIT ROOT NODE"),console.log(JSON.stringify(this.dumpTree(),null,2))));else{var d=t.children.indexOf(e);e.values.length>0?(0!==d&&l.replaceAt(t.keys,h.keys[0],d-1),l.replaceAt(t.children,h,d),l.insertAt(t.keys,c.keys[0],d),l.insertAt(t.children,c,d+1),h.prev=e.prev,h.next=c,c.prev=h,c.next=e.next,this.debug&&(console.log("SPLIT BRANCH LEAF"),console.log(JSON.stringify(this.dumpTree(),null,2))),this._splitLeaf(t)):(c.keys=u.slice(n+1),h.children=a.slice(0,n+1),h.setParentOnChildren(),c.children=a.slice(n+1),c.setParentOnChildren(),l.replaceAt(t.children,h,d),l.insertAt(t.keys,u[n],d),l.insertAt(t.children,c,d+1),this.debug&&(console.log("SPLIT BRANCH NODE"),console.log(JSON.stringify(this.dumpTree(),null,2))),this._splitLeaf(t))}}}},{key:"_mergeLeaf",value:function(e){if(e.hasChildren()){if(e.children.length>this._minKeys()&&e.children.length>e.keys.length)return}else if(e.size()>=this._minKeys())return;if(this.debug&&(console.log("BEFORE MERGE LEAF "+e.id),console.log(JSON.stringify(this.dumpTree(),null,2))),e===this.root)1===e.children.length?(e.children[0].parent=null,this.root=e.children[0],this.root.updateKeys(),e.children=null):(e.updateKeys(),e.setParentOnChildren());else{var n=e.parent.children.indexOf(e),t=null,r=null;n>0&&(t=e.parent.children[n-1]),n<e.parent.children.length-1&&(r=e.parent.children[n+1]),e.children.length>0?(t&&t.size()>this._minKeys()?(e.keys.unshift(t.keys.pop()),e.children.unshift(t.children.pop()),l.replaceAt(e.parent.keys,e.keys[0],n-1),e.updateKeys(),e.setParentOnChildren(),t.updateKeys(),t.setParentOnChildren(),e.parent.updateKeys()):r&&r.size()>this._minKeys()?(e.keys.push(r.keys.shift()),e.children.push(r.children.shift()),l.replaceAt(e.parent.keys,r.keys[0],e.parent.children.indexOf(r)-1),e.updateKeys(),e.setParentOnChildren(),r.updateKeys(),r.setParentOnChildren(),e.parent.updateKeys()):(t?(t.keys=t.keys.concat(e.keys),t.children=t.children.concat(e.children),t.updateKeys(),t.setParentOnChildren()):(r.keys=e.keys.concat(r.keys),r.children=e.children.concat(r.children),r.updateKeys(),r.setParentOnChildren()),e.keys=[],e.children=[],l.removeAt(e.parent.children,n),e.parent.updateKeys()),this.debug&&(console.log("MERGE BRANCH NODE"),console.log(JSON.stringify(this.dumpTree(),null,2))),this._mergeLeaf(e.parent)):(t&&t.size()>this._minKeys()?(e.keys.unshift(t.keys.pop()),e.values.unshift(t.values.pop()),l.replaceAt(e.parent.keys,e.keys[0],n-1)):r&&r.size()>this._minKeys()?(e.keys.push(r.keys.shift()),e.values.push(r.values.shift()),l.replaceAt(e.parent.keys,r.keys[0],e.parent.children.indexOf(r)-1)):(t?(t.keys=t.keys.concat(e.keys),t.values=t.values.concat(e.values)):(r.keys=e.keys.concat(r.keys),r.values=e.values.concat(r.values)),e.prev&&(e.prev.next=e.next),e.next&&(e.next.prev=e.prev),e.keys=[],e.values=[],l.removeAt(e.parent.children,n),e.parent.updateKeys()),this.debug&&(console.log("MERGE BRANCH LEAF"),console.log(JSON.stringify(this.dumpTree(),null,2))),this._mergeLeaf(e.parent))}}}]),e}();e.exports=a},function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var i=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),s=t(2),l=function(){function e(){arguments.length<=0||void 0===arguments[0]?{}:arguments[0];r(this,e),this.id=s.unique_id(),this.parent=null,this.prev=null,this.next=null,this.children=[],this.keys=[],this.values=[]}return i(e,[{key:"injectData",value:function(e,n){if("undefined"!=typeof n){var t=s.binarySearch(this.keys,e);if(t.found){var r=s.binarySearch(this.values[t.index],n);s.insertAt(this.values[t.index],n,r.index)}else s.insertAt(this.keys,e,t.index),s.insertAt(this.values,[n],t.index)}}},{key:"ejectData",value:function(e,n){var t=s.binarySearch(this.keys,e);if(t.found)if("undefined"==typeof n)s.removeAt(this.keys,t.index),s.removeAt(this.values,t.index);else{var r=s.binarySearch(this.values[t.index],n);r.found&&(s.removeAt(this.values[t.index],r.index),0===this.values[t.index].length&&(s.removeAt(this.keys,t.index),s.removeAt(this.values,t.index)))}return t}},{key:"get",value:function(e){var n=s.binarySearch(this.keys,e);return n.found?this.values[n.index]:[]}},{key:"size",value:function(){return this.keys.length}},{key:"hasChildren",value:function(){return this.children.length>0}},{key:"setParentOnChildren",value:function(){var e=!0,n=!1,t=void 0;try{for(var r,i=this.children[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var s=r.value;s.parent=this}}catch(l){n=!0,t=l}finally{try{!e&&i["return"]&&i["return"]()}finally{if(n)throw t}}}},{key:"replaceKey",value:function(e,n){var t=s.binarySearch(this.keys,e);t.found&&(this.debug&&console.log("replace "+e+" with "+n+" in leaf "+this.id),s.replaceAt(this.keys,n,t.index)),this.parent&&this.parent.replaceKey(e,n)}},{key:"updateKeys",value:function(){if(this.hasChildren()){for(var e=[],n=1;n<this.children.length;n++){var t=this.children[n];e.push(s.detectKey(t))}e.length>0&&(this.keys=e)}}}]),e}();e.exports=l},function(e,n){"use strict";var t={defaultSort:function(e,n){return n>e?-1:e>n?1:0},mergeObj:function(e,n){if(null==e||null==n)return e;for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t]);return e},unique_id:function(){return""+(Math.random()+1).toString(36).substr(2)},insertAt:function(e,n,t){return e.splice(t,0,n),e},removeAt:function(e,n){return e.splice(n,1),e},replaceAt:function(e,n,t){return e[t]=n,e},binarySearch:function(e,n){for(var r,i,s=arguments.length<=2||void 0===arguments[2]?null:arguments[2],l=0,a=e.length,u=s||t.defaultSort;a>l;){if(i=(l+a)/2|0,r=u(n,e[i]),0===r)return{found:!0,index:i};0>r?a=i:l=i+1}return{found:!1,index:a}},detectKey:function(e){return e.hasChildren()?t.detectKey(e.children[0]):e.keys[0]}};e.exports=t}])});